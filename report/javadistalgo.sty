% JAVADISTALGO STYLE -- extension of ALGORITHMIC
%    for LaTeX version 2e
% E-mail hein.meling@item.ntnu.no
%
% Modified by Jan Magne Tjensvold
% E-mail jm.tjensvold@stud.uis.no 
%
% Based on distribalgo by
% E-mail xavier.defago@epfl.ch
%
%
% the algorithmic style was developed by Peter Williams
%
\NeedsTeXFormat{LaTeX2e}
\ProvidesPackage{javadistalgo}
\typeout{Document Style `javadistalgo' - environment}
%
\RequirePackage{algorithmic}
\newboolean{ALC@nobraces}
\setboolean{ALC@nobraces}{false}
\newboolean{ALC@highlight}
\setboolean{ALC@highlight}{false}
\newcounter{ALC@phase}
%
\DeclareOption{noend}{\setboolean{ALC@noend}{true}}
\DeclareOption{nobraces}{\setboolean{ALC@nobraces}{true}}
%
\ProcessOptions
%
% JAVADISTALGO
\ifthenelse{\boolean{ALC@nobraces}}{
  \newcommand{\algorithmicbegin}{}
  \renewcommand{\algorithmicend}{}
}{
  \newcommand{\algorithmicbegin}{\{}
  \renewcommand{\algorithmicend}{\}\ }
 \renewcommand{\algorithmicelse}{\algorithmicend\textbf{else}\ \algorithmicbegin}
 \renewcommand{\algorithmicdo}{\algorithmicbegin}
 \renewcommand{\algorithmicdo}{\algorithmicbegin}
 \renewcommand{\algorithmicthen}{\algorithmicbegin}
 \renewcommand{\algorithmicendif}{\algorithmicend}
 \renewcommand{\algorithmicendfor}{\algorithmicend}
 \renewcommand{\algorithmicendwhile}{\algorithmicend}
}
\newcommand{\algorithmichighlight}[1]{{\footnotesize \textbf{{#1}:}}}
\newcommand{\algorithmicphase}{%
  \addtocounter{ALC@phase}{1}\textbf{Phase~\arabic{ALC@phase}:}}
\newcommand{\algorithmicinit}{Initialization:}
\newcommand{\algorithmicproc}{\textbf{procedure}}
\newcommand{\algorithmicendproc}{\algorithmicend}
\newcommand{\algorithmicclass}{\textbf{class}}
\newcommand{\algorithmicendclass}{\algorithmicend}
\newcommand{\algorithmicconstr}{}
\newcommand{\algorithmicendconstr}{\algorithmicend}
\newcommand{\algorithmicmethod}{}
\newcommand{\algorithmicendmethod}{\algorithmicend}
\newcommand{\algorithmicfunc}{\textbf{function}}
\newcommand{\algorithmicendfunc}{\algorithmicend}
\newcommand{\algorithmicwhen}{\textbf{when}}
\newcommand{\algorithmicendwhen}{\algorithmicend\ \algorithmicwhen}
\newcommand{\algorithmicupon}{\textbf{upon}}
\newcommand{\algorithmicendupon}{\algorithmicend\ \algorithmicupon}
\newcommand{\algorithmicreturn}{\textbf{return}}
\newcommand{\algorithmicvar}{\textbf{var}}
\newcommand{\algorithmictask}{\textbf{task}}
\newcommand{\algorithmicendtask}{\algorithmicend}
\newcommand{\algorithmicdowhile}{\textbf{do}}
\newcommand{\algorithmicenddowhile}{\algorithmicend\ \textbf{while}}
\newcommand{\algorithmicforeach}{\textbf{foreach}}
%
\renewcommand{\algorithmiccomment}[1]{\hfill{\footnotesize \{\textit{#1}\}}\\}
%
\newcommand{\starthighlight}{\setboolean{ALC@highlight}{true}}
\newcommand{\stophighlight}{\setboolean{ALC@highlight}{false}}
%
%
\newenvironment{distribalgo}[1][0]{%
  \setcounter{ALC@phase}{0}\begin{algorithmic}[#1]
%
\renewcommand{\ALC@lno}{%
\ifthenelse{\equal{\arabic{ALC@rem}}{0}}%
{\ifthenelse{\boolean{ALC@highlight}}%
{\algorithmichighlight{\arabic{ALC@line}}}%
{{\footnotesize \arabic{ALC@line}:}}}%
{}}
    \newenvironment{ALC@indent}{\begin{ALC@g}}{\end{ALC@g}}
    \newenvironment{ALC@class}{\begin{ALC@g}}{\end{ALC@g}}
    \newenvironment{ALC@constr}{\begin{ALC@g}}{\end{ALC@g}}
    \newenvironment{ALC@method}{\begin{ALC@g}}{\end{ALC@g}}
    \newenvironment{ALC@func}{\begin{ALC@g}}{\end{ALC@g}}
    \newenvironment{ALC@proc}{\begin{ALC@g}}{\end{ALC@g}}
    \newenvironment{ALC@when}{\begin{ALC@g}}{\end{ALC@g}}
    \newenvironment{ALC@init}{\begin{ALC@g}}{\end{ALC@g}}
    \newenvironment{ALC@phase}{\begin{ALC@g}}{\end{ALC@g}}
    \newenvironment{ALC@var}{\begin{ALC@g}}{\end{ALC@g}}
    \newenvironment{ALC@upon}{\begin{ALC@g}}{\end{ALC@g}}
    \newenvironment{ALC@task}{\begin{ALC@g}}{\end{ALC@g}}
    \newenvironment{ALC@dowhile}{\begin{ALC@g}}{\end{ALC@g}}
    \renewcommand{\ALC@it}{%
      \stepcounter{ALC@line}
      \addtocounter{ALC@rem}{1}
      \ifthenelse{\equal{\arabic{ALC@rem}}{#1}}{%
        \setcounter{ALC@rem}{0}
      }{
      }
      \item}
    \renewcommand{\ALC@com}[1]{\ifthenelse{\equal{##1}{default}}%
      {}{\algorithmiccomment{##1}}}
    \newcommand{\STCOMMENT}[1]{\ALC@it \{{\footnotesize \it ##1}\}}
    \newcommand{\PHASE}[1][default]{\ALC@it\algorithmicphase\ \ALC@com{##1}\begin{ALC@phase}}
    \newcommand{\ENDPHASE}{\end{ALC@phase}}
    \newcommand{\INIT}{\ALC@it\algorithmicinit\begin{ALC@init}}
    \newcommand{\ENDINIT}{\end{ALC@init}}
    \newcommand{\INDENT}[2][default]{\ALC@it{##2}\ \ALC@com{##1}\begin{ALC@indent}}
    \newcommand{\ENDINDENT}{\end{ALC@indent}}
    \newcommand{\PROCEDURE}[2][default]{\ALC@it\algorithmicproc\ ##2\ \ALC@com{##1}\begin{ALC@proc}}
    \newcommand{\FUNCTION}[2][default]{\ALC@it\algorithmicfunc\ ##2\ \ALC@com{##1}\begin{ALC@func}}
    \newcommand{\FOREACH}[2][default]{\ALC@it\algorithmicforeach\ ##2\ \algorithmicdo\ \ALC@com{##1}\begin{ALC@for}}
    \newcommand{\CLASS}[2][default]{\ALC@it\algorithmicclass\ ##2\  \algorithmicbegin\ \ALC@com{##1}\begin{ALC@class}}
    \newcommand{\CONSTR}[2][default]{\ALC@it\algorithmicconstr\ ##2\  \algorithmicbegin\ \ALC@com{##1}\begin{ALC@constr}}
    \newcommand{\METHOD}[2][default]{\ALC@it\algorithmicmethod\ ##2\  \algorithmicbegin\ \ALC@com{##1}\begin{ALC@method}}
    \newcommand{\TASK}[2][default]{\ALC@it\algorithmictask\ ##2\ \ALC@com{##1}\begin{ALC@task}}
    \newcommand{\RETURN}[2][default]{\ALC@it\algorithmicreturn\ ##2\ \ALC@com{##1}}
    \newcommand{\VAR}[1][default]{\ALC@it\algorithmicvar\ \ALC@com{##1}\begin{ALC@var}}
    \newcommand{\ENDVAR}{\end{ALC@var}}
    \newcommand{\WHEN}[2][default]{\ALC@it\algorithmicwhen\ ##2\ \ALC@com{##1}\begin{ALC@when}}
    \newcommand{\UPON}[2][default]{\ALC@it\algorithmicupon\ ##2\ \algorithmicdo\ \ALC@com{##1}\begin{ALC@upon}}
    \newcommand{\DOWHILE}[1][default]{\ALC@it\algorithmicdowhile\ \algorithmicbegin\ \ALC@com{##1}\begin{ALC@dowhile}}
    \newcommand{\ENDDOWHILE}[1]{\end{ALC@dowhile}\ALC@it\algorithmicenddowhile\ ##1}
    \newcommand{\BLANK}{\vspace{\baselineskip}}
    \newcommand{\HALFBLANK}{\vspace{0.5\baselineskip}}
    \ifthenelse{\boolean{ALC@noend}}{
      \newcommand{\ENDCLASS}{\end{ALC@class}}
      \newcommand{\ENDCONSTR}{\end{ALC@constr}}
      \newcommand{\ENDMETHOD}{\end{ALC@method}}
      \newcommand{\ENDPROC}{\end{ALC@proc}}
      \newcommand{\ENDFUNC}{\end{ALC@func}}
      \newcommand{\ENDTASK}{\end{ALC@task}}
      \newcommand{\ENDWHEN}{\end{ALC@when}}
      \newcommand{\ENDUPON}{\end{ALC@upon}}
    }{
      \newcommand{\ENDCLASS}{\end{ALC@class}\ALC@it\algorithmicendclass}
      \newcommand{\ENDCONSTR}{\end{ALC@constr}\ALC@it\algorithmicendconstr}
      \newcommand{\ENDMETHOD}{\end{ALC@method}\ALC@it\algorithmicendmethod}
      \newcommand{\ENDPROC}{\end{ALC@proc}\ALC@it\algorithmicendproc}
      \newcommand{\ENDFUNC}{\end{ALC@func}\ALC@it\algorithmicendfunc}
      \newcommand{\ENDTASK}{\end{ALC@task}\ALC@it\algorithmicendtask}
      \newcommand{\ENDWHEN}{\end{ALC@when}\ALC@it\algorithmicendwhen}
      \newcommand{\ENDUPON}{\end{ALC@upon}\ALC@it\algorithmicendupon}
    }
    }{\end{algorithmic}}
